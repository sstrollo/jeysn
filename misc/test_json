#! /usr/bin/env escript                                 # -*- mode: erlang -*-

main([File]) ->
    init(),
    try
        io:format("processing ~s... ", [File]),
        {ok, _Term} = jeysn:decode_file(File),
        io:format("ok\n", []),
        %%io:format("~p\n", [_Term]),
        halt(0)
    catch
        error:syntax ->
            halt(1);
        _X:_Y ->
            io:format("~p:~p\n", [_X, _Y]),
            halt(2)
    end;

main(["double", File]) ->
    init(),
    try
        {ok, Term} = jeysn:decode_file(File),
        io:format("~p\n", [Term]),
        String = iolist_to_binary(jeysn:encode(Term)),
        io:format("~s\n", [String]),
        {ok, Term} = jeysn:decode(String),
        halt(0)
    catch
        error:syntax ->
            halt(1);
        _X:_Y ->
            io:format("~p:~p\n", [_X, _Y]),
            halt(2)
    end;

main(Files) ->
    init(),
    lists:foreach(
      fun (File) ->
              io:format("processing ~s... ", [File]),
              try
                  {ok, _Term} = jeysn:decode_file(File),
                  io:format("ok\n", [])
              catch
                  _X:_Y ->
                      io:format("~p:~p\n", [_X, _Y])
              end
      end, Files),
    halt(0).


init() ->
    code:add_path("/Users/seb/Desktop/src/jeysn/ebin"),
    application:start(jeysn),
    ok.
